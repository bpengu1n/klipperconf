#####################################################################
# KlackEnder- Variables
#####################################################################
[gcode_macro _Probe_Variables]
variable_probe_attached:            False
variable_probe_state:               False
variable_probe_lock:                False
variable_z_endstop_x:               0
variable_z_endstop_y:               0
gcode:


#####################################################################
# KlackEnder- Macros
#####################################################################

[gcode_macro _Homing_Variables]
gcode:
    {% set reset  = params.RESET|default(0) %}
    {% if reset %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ False }
    {% endif %}

##########################
# Attach probe and lock it
[gcode_macro Attach_Probe_Lock]
description: Attaches Klack Probe, can only be docked after unlocking
gcode:
    Attach_Probe
    _Probe_Lock

########################
# Dock probe and lock it
[gcode_macro Dock_Probe_Unlock]
description: Docks Klack Probe even if it was locked
gcode:
    _Probe_Unlock
    Dock_Probe

##############
# Unlock Probe
[gcode_macro _Probe_Unlock]
description: Unlocks Klack Probe state
gcode:
    SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ False }

############
# Lock Probe
[gcode_macro _Probe_Lock]
description: Locks Klack Probe state
gcode:
    SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=probe_lock VALUE={ True }

######################
# Attach Probe Routine
[gcode_macro Attach_Probe]
description: Attaches Klack Probe
gcode:
  # Get probe attach status
  {% set probe_attached = printer["gcode_macro _Probe_Variables"].probe_attached %}
  {% set probe_lock = printer["gcode_macro _Probe_Variables"].probe_lock %}
  # If probe not attached and locked
  {% if not probe_attached and not probe_lock %}
  G90
  G1 X242 F4000
  G4 P300
  G1 Z15
  G1 X0
  {% elif probe_lock %}
    { action_respond_info("Probe locked!") }
  {% else %}
    { action_respond_info("Probe already attached!") }
  {% endif %}

[gcode_macro Dock_Probe]
gcode:
  # If probe not attached and not locked
  {% if probe_attached and not probe_lock %}
      G90
      G1 Z20
      G1 X242 F12000
      G1 Y0 ; Check this against your config of [stepper_y] position_min: ...!
      G1 Z0
      G4 P300
      G1 X220 F6000
      G1 Z10
      G1 X0
  {% elif probe_lock %}
    { action_respond_info("Probe locked") }
  {% else %}
    { action_respond_info("Probe already docked") }
  {% endif %}


[gcode_macro BED_MESH_CALIBRATE] #macro with parameter passing
rename_existing: _BED_MESH_CALIBRATE
gcode:
  Attach_Probe
  _BED_MESH_CALIBRATE {rawparams}
  Dock_Probe

[gcode_macro G29] #reliant on the macro above
gcode:
  BED_MESH_CALIBRATE

[gcode_macro PROBE_CALIBRATE]
rename_existing: _PROBE_CALIBRATE
gcode:
  {% if not 'xyz' in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  Attach_Probe
  G90
  G1 Z20
  G1 X113.5 Y96.5 F12000 ; Readjust for center of bed adjusted for probe offset
  _PROBE_CALIBRATE
  TESTZ Z=20
  M117 Remove the Klack to continue calibration!

[gcode_macro PROBE_ACCURACY]
rename_existing: _PROBE_ACCURACY
gcode:
  {% if not 'xyz' in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  Attach_Probe
  G90
  G1 X113.5 Y96.5 F12000 ; Readjust for center of bed adjusted for probe offset
  _PROBE_ACCURACY
  Dock_Probe

[gcode_macro Z_TILT_ADJUST] #Uncomment this macro if using dual z with z_tilt
rename_existing: _Z_TILT_ADJUST
gcode:
   Attach_Probe
   _Z_TILT_ADJUST
   Dock_Probe